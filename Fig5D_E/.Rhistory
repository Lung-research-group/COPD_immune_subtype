label.y.npc = "top")+
scale_y_continuous(expand = expansion(mult = c(0.15, 0.25)))+
theme(plot.margin = margin(0.5, 0.5, 0.5, 0.5, "cm"))+
facet_wrap(~variable, scales = "free_y", ncol = 4)+
scale_fill_manual(values=color, breaks = names(color))+
scale_color_manual(values=color, breaks = names(color))+
scale_x_discrete(label=labelss)+ylab("LAA950 whole lung")+xlab("")+
theme(strip.text.x = element_text(size = 16),
axis.text = element_text(size=16),
axis.title.y=element_text(size=16))
p2
## correlation plots (fig5G) ====
meta <- cbind.data.frame("LAA950_whole"=data[["LAA950_whole"]],
"LAA950_lobe"=data[["LAA950_lobe"]],
"patient"=data[["patient_ID"]])
meta <-unique(meta)
patient_ID <- unique(meta$patient)
overlap <- intersect(nnaostring_metadata$patient, meta$patient)
nnaostring_metadata <- nnaostring_metadata[which(nnaostring_metadata$patient %in% patient_ID),]
nnaostring_metadata <- nnaostring_metadata[, c("patient","Pack.years" )] #"FEV1.pred", "FEV1.FVC", "Pack.years"
meta <- merge(meta, nnaostring_metadata, by="patient")
meta <-unique(meta)
melt <- melt(df)
merge <- left_join(melt, meta, by="patient")
#GOLD1-2/3-4
gold_12 <- merge[which(merge$gold_broad %in% c("GOLD1-2","GOLD3-4")),-which(colnames(merge) %in% c("LAA950_lobe", "LAA950_whole"))]
gold_12$status <- ifelse(gold_12$patient %in% cluster2,  "cluster_2","cluster_1")
library(ggpubr)
cols <-c("#D9B926", "#D02F3B")
names(cols) <- c("GOLD1-2","GOLD3-4")
immune <- c("Classical monocytes", "Non classical monocytes", "Macrophage","Macrophage_Alveolar",
"Mast cells", "pDC","cDC2","cDC1", "DC_Mature",
"B cells", "B Plasma", "T cytotoxic"  ,
"Tregs","T helper",
"NK cells")
merge$variable <- factor(merge$variable, levels = immune)
merge$LAA950_whole_t <- log10(merge$LAA950_whole)
sp <- ggplot(merge[which(merge$gold_broad %in% c("GOLD1-2", "GOLD3-4") &
merge$variable %in%
c("Mast cells","Macrophage",
"pDC","Classical monocytes")),], aes(LAA950_whole_t, value)) +
geom_point(aes(color=gold_broad), size=6) +
facet_wrap(~variable, scales = "free", ncol = 4)+
theme(strip.text = element_text(size = 18),
axis.text.x = element_text(size = 14, angle = 0, hjust = 1, vjust = 1),
axis.text.y = element_text(size = 14),
axis.title = element_text(size = 14),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12),
text = element_text(size = 14))+ggtitle("")+ylab("abundance score\n(LOG transformed)")+xlab("LAA950 whole lung (LOG transformed)")+
scale_color_manual(values = cols, breaks = names(cols))+
geom_smooth(method = "lm")+theme_bw(base_size = 16)+
theme(axis.text= element_text(hjust=0.5, size = 18),
axis.title= element_text(size = 20), strip.text = element_text(
size = 20), legend.title = element_blank(),legend.key.spacing.y = unit(0.1, "in"))+ggtitle("")
sp
sp2 <-sp+stat_cor(method = "spearman", cor.coef.name="R", size=6,
label.y.npc="top", label.x.npc = "left")
sp2
sp_plot <- sp+theme(legend.position = "none")
sp_plot
#1) load the data
dir <- paste0(dirname(rstudioapi::getSourceEditorContext()$path),"/")
#save file for downstream analysis
dir <- paste0(dirname(rstudioapi::getSourceEditorContext()$path),"/")
#upload the immune cell frequency table
scRNA <- paste0(dir, "2024-02-16_cell_freq.xlsx")
cell.freq <- read_excel(scRNA, sheet = 1)
#upload the immune cell frequency table
scRNA <- paste0(dir, "input data/2024-02-16_cell_freq.xlsx")
cell.freq <- read_excel(scRNA, sheet = 1)
annotation_col <- cell.freq %>%
filter(Disease_Identity != "IPF") %>% # remove IPF samples
filter(!Subject_Identity %in% c("137CO", "152CO")) %>% #remove the two samples with low cell counts
select(Disease_Identity)
annotation_col <- as.data.frame(annotation_col)
annotation_col$Disease_Identity<-as.factor(annotation_col$Disease_Identity)
rownames(annotation_col) <- paste0("a_",  c(1:44))
scrna.df <- cell.freq  %>%
filter(Disease_Identity != "IPF") %>%
filter(!Subject_Identity %in% c("137CO", "152CO")) %>%
select(-Disease_Identity, -Subject_Identity)
scrna.df <- log(scrna.df+1)
rownames(scrna.df) <- paste0("a_",  c(1:44))
#annotation
color <- c( "darkgrey", "darkred")
names(color) <-  c("Control","COPD")
#callback = function(hc, ...){dendsort(hc)}
#rename the annotation
colnames(scrna.df) <- case_when(colnames(scrna.df) =="B" ~ "B cells",
colnames(scrna.df) =="B_Plasma"  ~ "B Plasma",
colnames(scrna.df) =="ILC_A" ~ "ILC_A",
colnames(scrna.df) =="ILC_B" ~ "ILC_B",
colnames(scrna.df) =="Macrophage" ~ "Macrophage",
colnames(scrna.df) =="Macrophage_Alveolar" ~ "Macrophage_Alveolar",
colnames(scrna.df) =="NK" ~ "NK cells",
colnames(scrna.df) =="T" ~ "T helper",
colnames(scrna.df) =="T_Cytotoxic" ~ "T cytotoxic",
colnames(scrna.df) =="T_Regulatory" ~ "Tregs",
colnames(scrna.df) =="cDC2" ~ "cDC2",
colnames(scrna.df) =="cMonocyte" ~ "Classical monocytes",
colnames(scrna.df) =="ncMonocyte" ~ "Non-classical monocytes",
colnames(scrna.df) =="pDC" ~ "pDC",
colnames(scrna.df) =="DC_Langerhans" ~ "DC_Langerhans",
colnames(scrna.df) =="Mast" ~ "Mast cells",
colnames(scrna.df) =="cDC1" ~ "cDC1",
colnames(scrna.df) =="DC_Mature" ~ "DC_Mature")
#calculate PCA
PCA_modelobject <- prcomp(scrna.df, scale=TRUE, center=TRUE)
summary(PCA_modelobject)
theme_journal <- theme(axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))+
theme(axis.text.x = element_text(colour = "black", size = 14, angle = 0, hjust=1, vjust=1))+
theme(axis.text.y = element_text(colour = "black", size = 14))+
theme(axis.title = element_text(size = 14, colour = "black"))+
theme(legend.position="right")+
theme(legend.text = element_text(size = 14))+
theme(legend.title = element_text(size = 16))
plotdata_cPCA$Disease_Identity <- factor(plotdata_cPCA$Disease_Identity, levels = c("Control","COPD" ))
pov <- PCA_modelobject$sdev^2/sum(PCA_modelobject$sdev^2)
barplot(pov)
#visualisation
library(ggplot2)
theme_set(theme_pubr(base_size=6, border = T, legend = "none"))
theme_journal <- theme(panel.grid.major = element_line(color = "light grey", linewidth = 0.2, linetype = "solid"),
panel.grid.minor = element_line(color = "light grey", linewidth = 0.05, linetype = "solid"),
plot.title = element_text(size = rel(1)),
axis.line.x = element_line(color="black", linewidth = 0.2),
axis.line.y = element_line(color="black", linewidth = 0.2),
axis.text = element_text(color="black", size = 6),
panel.border = element_rect(colour = "black", fill = NA, linewidth = 0.2)
)
library("factoextra")
#note biplot works only for cPCA and mPCA but not mixO onces (some kind of class error in the delivered PCA objects)
Biplot_cPCA <- fviz_pca_biplot(PCA_modelobject, title = "PCA-Biplot",
habillage= plotdata_cPCA$Disease_Identity,
mean.point = FALSE, pointsize = 1, pointshape = 19,
label ="var", select.var = list(contrib = 10), #addEllipses=TRUE, ellipse.level=0.95
col.var = "black",labelsize = 2, arrowsize = 0.2, repel = TRUE) +  #can't color by contrib since uses already color_scale for PCA scores
scale_color_manual(values=color) +
expand_limits(x = c(min(PCA_modelobject$x[,"PC1"])*1.1, max(PCA_modelobject$x[,"PC1"])*1.1),
y = c(min(PCA_modelobject$x[,"PC2"])*1.1, max(PCA_modelobject$x[,"PC2"])*1.1)) +
guides(color = guide_legend(override.aes = list(size = 1))) + #reduces dot size in legend
xlab(paste0("PC1 ", round(pov[1]*100, 1), "%"))+ylab(paste0("PC2 ", round(pov[2]*100,1), "%"))+
theme_journal +   # +coord_fixed() #makes quadratic
theme(legend.position="none", plot.title = element_text(color="black", size = 6),
plot.caption = element_text(size = 4, hjust = 0), plot.caption.position = "plot",
aspect.ratio = 1,
axis.title.x = element_text(colour = "black", size = 6),
axis.title.y = element_text(colour = "black", size = 6) );Biplot_cPCA
#Fig 3C PCA biplot -------------------------
library(RColorBrewer)
library(readxl)
library(tidyverse)
#upload the immune cell frequency table
scRNA <- paste0(dir, "input data/2024-02-16_cell_freq.xlsx")
cell.freq <- read_excel(scRNA, sheet = 1)
annotation_col <- cell.freq %>%
filter(Disease_Identity != "IPF") %>% # remove IPF samples
filter(!Subject_Identity %in% c("137CO", "152CO")) %>% #remove the two samples with low cell counts
select(Disease_Identity)
annotation_col <- as.data.frame(annotation_col)
annotation_col$Disease_Identity<-as.factor(annotation_col$Disease_Identity)
rownames(annotation_col) <- paste0("a_",  c(1:44))
scrna.df <- cell.freq  %>%
filter(Disease_Identity != "IPF") %>%
filter(!Subject_Identity %in% c("137CO", "152CO")) %>%
select(-Disease_Identity, -Subject_Identity)
scrna.df <- log(scrna.df+1)
rownames(scrna.df) <- paste0("a_",  c(1:44))
#annotation
color <- c( "darkgrey", "darkred")
names(color) <-  c("Control","COPD")
#callback = function(hc, ...){dendsort(hc)}
#rename the annotation
colnames(scrna.df) <- case_when(colnames(scrna.df) =="B" ~ "B cells",
colnames(scrna.df) =="B_Plasma"  ~ "B Plasma",
colnames(scrna.df) =="ILC_A" ~ "ILC_A",
colnames(scrna.df) =="ILC_B" ~ "ILC_B",
colnames(scrna.df) =="Macrophage" ~ "Macrophage",
colnames(scrna.df) =="Macrophage_Alveolar" ~ "Macrophage_Alveolar",
colnames(scrna.df) =="NK" ~ "NK cells",
colnames(scrna.df) =="T" ~ "T helper",
colnames(scrna.df) =="T_Cytotoxic" ~ "T cytotoxic",
colnames(scrna.df) =="T_Regulatory" ~ "Tregs",
colnames(scrna.df) =="cDC2" ~ "cDC2",
colnames(scrna.df) =="cMonocyte" ~ "Classical monocytes",
colnames(scrna.df) =="ncMonocyte" ~ "Non-classical monocytes",
colnames(scrna.df) =="pDC" ~ "pDC",
colnames(scrna.df) =="DC_Langerhans" ~ "DC_Langerhans",
colnames(scrna.df) =="Mast" ~ "Mast cells",
colnames(scrna.df) =="cDC1" ~ "cDC1",
colnames(scrna.df) =="DC_Mature" ~ "DC_Mature")
#calculate PCA
PCA_modelobject <- prcomp(scrna.df, scale=TRUE, center=TRUE)
View(scrna.df)
summary(PCA_modelobject)
theme_journal <- theme(axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))+
theme(axis.text.x = element_text(colour = "black", size = 14, angle = 0, hjust=1, vjust=1))+
theme(axis.text.y = element_text(colour = "black", size = 14))+
theme(axis.title = element_text(size = 14, colour = "black"))+
theme(legend.position="right")+
theme(legend.text = element_text(size = 14))+
theme(legend.title = element_text(size = 16))
plotdata_cPCA$Disease_Identity
plotdata_cPCA <- data.frame(PCA_modelobject$x[,1:3])
scrna.df
scrna.df <- cell.freq  %>%
filter(Disease_Identity != "IPF") %>%
filter(!Subject_Identity %in% c("137CO", "152CO"))
plotdata_cPCA <- data.frame(PCA_modelobject$x[,1:3])
plotdata_cPCA$patient <- scrna.df$Subject_Identity
scrna.df$Disease_Identity,
scrna.df$Disease_Identity
plotdata_cPCA$Disease_Identity <- factor(scrna.df$Disease_Identity, levels = c("Control","COPD" ))
pov <- PCA_modelobject$sdev^2/sum(PCA_modelobject$sdev^2)
barplot(pov)
#visualisation
library(ggplot2)
theme_set(theme_pubr(base_size=6, border = T, legend = "none"))
theme_journal <- theme(panel.grid.major = element_line(color = "light grey", linewidth = 0.2, linetype = "solid"),
panel.grid.minor = element_line(color = "light grey", linewidth = 0.05, linetype = "solid"),
plot.title = element_text(size = rel(1)),
axis.line.x = element_line(color="black", linewidth = 0.2),
axis.line.y = element_line(color="black", linewidth = 0.2),
axis.text = element_text(color="black", size = 6),
panel.border = element_rect(colour = "black", fill = NA, linewidth = 0.2)
)
library("factoextra")
#note biplot works only for cPCA and mPCA but not mixO onces (some kind of class error in the delivered PCA objects)
Biplot_cPCA <- fviz_pca_biplot(PCA_modelobject, title = "PCA-Biplot",
habillage= plotdata_cPCA$Disease_Identity,
mean.point = FALSE, pointsize = 1, pointshape = 19,
label ="var", select.var = list(contrib = 10), #addEllipses=TRUE, ellipse.level=0.95
col.var = "black",labelsize = 2, arrowsize = 0.2, repel = TRUE) +  #can't color by contrib since uses already color_scale for PCA scores
scale_color_manual(values=color) +
expand_limits(x = c(min(PCA_modelobject$x[,"PC1"])*1.1, max(PCA_modelobject$x[,"PC1"])*1.1),
y = c(min(PCA_modelobject$x[,"PC2"])*1.1, max(PCA_modelobject$x[,"PC2"])*1.1)) +
guides(color = guide_legend(override.aes = list(size = 1))) + #reduces dot size in legend
xlab(paste0("PC1 ", round(pov[1]*100, 1), "%"))+ylab(paste0("PC2 ", round(pov[2]*100,1), "%"))+
theme_journal +   # +coord_fixed() #makes quadratic
theme(legend.position="none", plot.title = element_text(color="black", size = 6),
plot.caption = element_text(size = 4, hjust = 0), plot.caption.position = "plot",
aspect.ratio = 1,
axis.title.x = element_text(colour = "black", size = 6),
axis.title.y = element_text(colour = "black", size = 6) );Biplot_cPCA
#Fig 3D Violin Plot ------------------
## Cell proportions ------------------------
### p1
names(cell.freq)
p1 <- cell.freq %>% pivot_longer(where(is.numeric)) %>%
mutate(name = gsub("NK", "NK cells", name),
name = gsub("T_", "X_", name),
name = gsub("T", "T helper", name, fixed = T),
name = gsub("X_", "T ", name),
name = gsub("T Regulatory", "Tregs", name),
name = gsub("cMonocyte", "Classical monocytes", name),
name = gsub("ncMonocyte", "Non-classical monocytes", name)) %>%
mutate(name = factor(name,
levels = c("B", "B_Plasma",  "T Cytotoxic", "T helper", "Tregs",  "ILC_A", "ILC_B",
"cDC1", "cDC2","DC_Langerhans", "DC_Mature", "pDC",
"NK cells", "Mast", "Macrophage",  "Macrophage_Alveolar", "Classical Monocyte", "Non-classical Monocyte"))) %>%
filter(Disease_Identity != "IPF") %>%
filter(name %in% c("B", "B_Plasma",  "T Cytotoxic", "T helper", "Tregs",  "ILC_A", "ILC_B")) %>%
mutate(Disease_Identity = factor(Disease_Identity, levels = c("Control", "COPD"))) %>%
mutate(value = log1p(value)) %>%
ggplot(aes(name, value, fill = Disease_Identity, colour = Disease_Identity)) +
geom_violin(alpha=0.4, lwd= 0, position = position_dodge(width = 0.75))+
geom_point(position = position_dodge(width = 0.75), colour = "black", size = 2.5)+
geom_point(position = position_dodge(width = 0.75), size = 2)+
stat_summary(fun = median, fun.min = median, fun.max = median, position = position_dodge(width = 0.75),
geom = "crossbar", width = 0.5, colour = "black")+
man.fill+
man.col+
labs(x = "",
y= expression("%"*CD45^"+"~cells~(LOG~transformed)))+
scale_y_continuous(expand = expansion(mult = c(0.1, 0.15)))+
theme(axis.title.y = element_text(size = 18))+ #added to make comparable to the biplots
theme(legend.position = "none")
p1
p1 <- cell.freq %>% pivot_longer(where(is.numeric)) %>%
mutate(name = gsub("NK", "NK cells", name),
name = gsub("T_", "X_", name),
name = gsub("T", "T helper", name, fixed = T),
name = gsub("X_", "T ", name),
name = gsub("T Regulatory", "Tregs", name),
name = gsub("cMonocyte", "Classical monocytes", name),
name = gsub("ncMonocyte", "Non-classical monocytes", name)) %>%
man.fill <-   scale_fill_manual(values = c("Donor" = "#757b87", "COPD" = "#791812"))
man.col <-   scale_color_manual(values = c("Donor" = "#757b87", "COPD" = "#791812"))
mutate(name = factor(name,
levels = c("B", "B_Plasma",  "T Cytotoxic", "T helper", "Tregs",  "ILC_A", "ILC_B",
"cDC1", "cDC2","DC_Langerhans", "DC_Mature", "pDC",
"NK cells", "Mast", "Macrophage",  "Macrophage_Alveolar", "Classical Monocyte", "Non-classical Monocyte"))) %>%
filter(Disease_Identity != "IPF") %>%
filter(name %in% c("B", "B_Plasma",  "T Cytotoxic", "T helper", "Tregs",  "ILC_A", "ILC_B")) %>%
mutate(Disease_Identity = factor(Disease_Identity, levels = c("Control", "COPD"))) %>%
mutate(value = log1p(value)) %>%
ggplot(aes(name, value, fill = Disease_Identity, colour = Disease_Identity)) +
geom_violin(alpha=0.4, lwd= 0, position = position_dodge(width = 0.75))+
geom_point(position = position_dodge(width = 0.75), colour = "black", size = 2.5)+
geom_point(position = position_dodge(width = 0.75), size = 2)+
stat_summary(fun = median, fun.min = median, fun.max = median, position = position_dodge(width = 0.75),
geom = "crossbar", width = 0.5, colour = "black")+
man.fill+
man.col+
labs(x = "",
y= expression("%"*CD45^"+"~cells~(LOG~transformed)))+
scale_y_continuous(expand = expansion(mult = c(0.1, 0.15)))+
theme(axis.title.y = element_text(size = 18))+ #added to make comparable to the biplots
theme(legend.position = "none")
man.fill <-   scale_fill_manual(values = c("Donor" = "#757b87", "COPD" = "#791812"))
man.col <-   scale_color_manual(values = c("Donor" = "#757b87", "COPD" = "#791812"))
p1 <- cell.freq %>% pivot_longer(where(is.numeric)) %>%
mutate(name = gsub("NK", "NK cells", name),
name = gsub("T_", "X_", name),
name = gsub("T", "T helper", name, fixed = T),
name = gsub("X_", "T ", name),
name = gsub("T Regulatory", "Tregs", name),
name = gsub("cMonocyte", "Classical monocytes", name),
name = gsub("ncMonocyte", "Non-classical monocytes", name)) %>%
mutate(name = factor(name,
levels = c("B", "B_Plasma",  "T Cytotoxic", "T helper", "Tregs",  "ILC_A", "ILC_B",
"cDC1", "cDC2","DC_Langerhans", "DC_Mature", "pDC",
"NK cells", "Mast", "Macrophage",  "Macrophage_Alveolar", "Classical Monocyte", "Non-classical Monocyte"))) %>%
filter(Disease_Identity != "IPF") %>%
filter(name %in% c("B", "B_Plasma",  "T Cytotoxic", "T helper", "Tregs",  "ILC_A", "ILC_B")) %>%
mutate(Disease_Identity = factor(Disease_Identity, levels = c("Control", "COPD"))) %>%
mutate(value = log1p(value)) %>%
ggplot(aes(name, value, fill = Disease_Identity, colour = Disease_Identity)) +
geom_violin(alpha=0.4, lwd= 0, position = position_dodge(width = 0.75))+
geom_point(position = position_dodge(width = 0.75), colour = "black", size = 2.5)+
geom_point(position = position_dodge(width = 0.75), size = 2)+
stat_summary(fun = median, fun.min = median, fun.max = median, position = position_dodge(width = 0.75),
geom = "crossbar", width = 0.5, colour = "black")+
man.fill+
man.col+
labs(x = "",
y= expression("%"*CD45^"+"~cells~(LOG~transformed)))+
scale_y_continuous(expand = expansion(mult = c(0.1, 0.15)))+
theme(axis.title.y = element_text(size = 18))+ #added to make comparable to the biplots
theme(legend.position = "none")
p1
### p2
p2 <- cell.freq %>% pivot_longer(where(is.numeric)) %>%
mutate(name = gsub("NK", "NK cells", name),
name = gsub("T_", "X_", name),
name = gsub("T", "T helper", name, fixed = T),
name = gsub("X_", "T ", name),
name = gsub("T Regulatory", "Tregs", name),
name = gsub("cMonocyte", "Class monocytes", name),
name = gsub("ncMonocyte", "Non-class monocytes", name)) %>%
mutate(name = factor(name,
levels = c("B", "B_Plasma",  "T Cytotoxic", "T helper", "Tregs",  "ILC_A", "ILC_B",
"cDC1", "cDC2","DC_Langerhans", "DC_Mature", "pDC",
"NK cells", "Mast", "Macrophage",  "Macrophage_Alveolar", "Classical Monocyte", "Non-classical Monocyte"))) %>%
filter(Disease_Identity != "IPF") %>%
filter(name %in% c("cDC1", "cDC2","DC_Langerhans", "DC_Mature", "pDC")) %>%
mutate(Disease_Identity = factor(Disease_Identity, levels = c("Control", "COPD"))) %>%
mutate(value = log1p(value)) %>%
ggplot(aes(name, value, fill = Disease_Identity, colour = Disease_Identity)) +
geom_violin(alpha=0.4, lwd= 0, position = position_dodge(width = 0.75))+
geom_point(position = position_dodge(width = 0.75), colour = "black", size = 3)+
geom_point(position = position_dodge(width = 0.75), size = 2)+
stat_summary(fun = median, fun.min = median, fun.max = median, position = position_dodge(width = 0.75),
geom = "crossbar", width = 0.5, colour = "black")+
man.fill+
man.col+
labs(x = "",
y= expression("%"*CD45^"+"~cells~(LOG~transformed)))+
scale_y_continuous(expand = expansion(mult = c(0.1, 0.15)))+
theme(axis.title.y = element_text(size = 18))+
theme(legend.position = "none")
p2
### p3
p3 <- cell.freq %>% pivot_longer(where(is.numeric)) %>%
mutate(name = gsub("NK", "NK cells", name),
name = gsub("T_", "X_", name),
name = gsub("T", "T helper", name, fixed = T),
name = gsub("X_", "T ", name),
name = gsub("T Regulatory", "Tregs", name),
name = gsub("Mast", "Mast cells", name),
name = gsub("Macrophage_Alveolar", "Macrophage \nAlveolar", name),
name = gsub("ncMonocyte", "Non-classical \nmonocytes", name),
name = gsub("cMonocyte", "Classical \nmonocytes", name)) %>%
mutate(name = factor(name,
levels = c("B", "B_Plasma",  "T Cytotoxic", "T helper", "Tregs",  "ILC_A", "ILC_B",
"cDC1", "cDC2","DC_Langerhans", "DC_Mature", "pDC",
"NK cells", "Mast cells", "Macrophage",  "Macrophage \nAlveolar",
"Classical \nmonocytes",
"Non-classical \nmonocytes"))) %>%
filter(Disease_Identity != "IPF") %>%
filter(name %in% c("NK cells", "Mast cells", "Macrophage",  "Macrophage \nAlveolar", "Classical \nmonocytes", "Non-classical \nmonocytes")) %>%
mutate(Disease_Identity = factor(Disease_Identity, levels = c("Control", "COPD"))) %>%
mutate(value = log1p(value)) %>%
ggplot(aes(name, value, fill = Disease_Identity, colour = Disease_Identity)) +
geom_violin(alpha=0.4, lwd= 0, position = position_dodge(width = 0.75))+
geom_point(position = position_dodge(width = 0.75), colour = "black", size = 2.5)+
geom_point(position = position_dodge(width = 0.75), size = 2)+
stat_summary(fun = median, fun.min = median, fun.max = median, position = position_dodge(width = 0.75),
geom = "crossbar", width = 0.5, colour = "black")+
man.fill+
man.col+
labs(x = "",
y= expression("%"*CD45^"+"~cells~(LOG~transformed)))+
scale_y_continuous(expand = expansion(mult = c(0.1, 0.15)))+
theme(axis.title.y = element_text(size = 18))+
theme(legend.position = "none")
p3
### patch -----------
patch <- p1/p2/p3 + plot_layout(axes = "collect", guides = "collect")
patch
## cohens_d ----------
temp <- cell.freq %>% pivot_longer(where(is.numeric)) %>%
filter(Disease_Identity != "IPF") %>%
na.omit(value) %>%
mutate(value = log1p(value)) %>%
mutate(Disease_Identity = factor(Disease_Identity, levels = c("Control", "COPD"))) %>%
group_by(name) %>%
cohens_d(value ~ Disease_Identity, paired = F) %>%
select(name, effsize, magnitude)
## significance ---------
sig.df <- cell.freq %>% pivot_longer(where(is.numeric)) %>%
filter(Disease_Identity != "IPF") %>%
na.omit(value) %>%
mutate(Disease_Identity = factor(Disease_Identity, levels = c("Control", "COPD"))) %>%
mutate(value = log1p(value)) %>% #not consistent with above
group_by(name) %>%
summarise(pval.wc = wilcox.test(value ~ Disease_Identity)$p.value) %>%
mutate(pval.wc.bh = p.adjust(pval.wc, method = "BH", n = length(pval.wc))) %>%
mutate(pval.wc.bh = round(pval.wc.bh, 5)) %>%
mutate(log.pval.wc.bh = round(-log10(pval.wc.bh), 5)) %>%
mutate(signif = case_when(pval.wc.bh <= 0.05 & pval.wc.bh > 0.01 ~"*", pval.wc.bh <= 0.01 & pval.wc.bh > 0.001 ~"**", pval.wc.bh <= 0.001 ~"***", .default = "ns")) %>%
left_join(temp)
temp <- cell.freq %>% pivot_longer(where(is.numeric)) %>%
filter(Disease_Identity != "IPF") %>%
na.omit(value) %>%
mutate(value = log1p(value)) %>%
mutate(Disease_Identity = factor(Disease_Identity, levels = c("Control", "COPD"))) %>%
group_by(name) %>%
cohens_d(value ~ Disease_Identity, paired = F) %>%
select(name, effsize, magnitude)
temp
cell.freq %>% pivot_longer(where(is.numeric)) %>%
filter(Disease_Identity != "IPF") %>%
na.omit(value) %>%
mutate(Disease_Identity = factor(Disease_Identity, levels = c("Control", "COPD"))) %>%
mutate(value = log1p(value)) %>% #not consistent with above
group_by(name) %>%
summarise(pval.wc = wilcox.test(value ~ Disease_Identity)$p.value) %>%
mutate(pval.wc.bh = p.adjust(pval.wc, method = "BH", n = length(pval.wc))) %>%
mutate(pval.wc.bh = round(pval.wc.bh, 5)) %>%
mutate(log.pval.wc.bh = round(-log10(pval.wc.bh), 5)) %>%
mutate(signif = case_when(pval.wc.bh <= 0.05 & pval.wc.bh > 0.01 ~"*", pval.wc.bh <= 0.01 & pval.wc.bh > 0.001 ~"**", pval.wc.bh <= 0.001 ~"***", .default = "ns")) %>%
left_join(temp)
#now we move to the FACS dataset
#FACS data
data_FACS <- read.csv(file=paste0(dir, "input data/FACS_foldchange.csv"))
data_FACS$X <- NULL
# add additional line for the dotplot wilcoxon graph
#after matching with data_FACS data we ended up having the following matched cytokines between plasma, lung, and scRNA
not_overlap <- c("CCL19_L", "CXCL13_L", "IFN_la2_3_S" ,"IFNa2_S",  "IFNb_S", "TNF_C_L")
overlap_cytokine <- c("CCL11_L","CCL11_S",
"CCL17_L","CCL17_S",
"CCL2_L","CCL2_S",
"CCL20_L","CCL20_S",
"CCL3_L","CCL3_S",
"CCL4_L","CCL4_S",
"CCL5_L","CCL5_S",
"CXCL1_L","CXCL1_S",
"CXCL10_L","CXCL10_S",
"CXCL11_L","CXCL11_S",
"CXCL12_L","CXCL12_S",
"CXCL5_L","CXCL5_S",
"CXCL9_L","CXCL9_S",
"GM_CSF_L","GM_CSF_S",
"IFN_la1_L","IFN_la1_S",
"IFNg_L","IFNg_S",
"IL10_L","IL10_S",
"IL1b_L","IL1b_S",
"IL6_L","IL6_S",
"IL8_L","IL8_S",
"TNFa_L","TNFa_S",
"TNFb_L","TNFb_S")
data <- data_FACS[which(data_FACS$.y. %in% overlap_cytokine),]
temp <- as.data.frame(str_split_fixed(data$.y., "_", 2))
data$cytokine <- str_remove_all(data$.y., "_L|_S")
cytokines_FACS_available <- overlap_cytokine
data <- data[which(data$.y. %in% cytokines_FACS_available),]
data$origin <- ifelse(grepl("_S", data$.y.), "plasma", "lung")
data$cytokine <- str_replace_all(data$cytokine,"IFNg", "IFNG")
data$cytokine <- str_replace_all(data$cytokine,"IL1b", "IL1B")
data$cytokine <- str_replace_all(data$cytokine,"TNFa", "TNF")
data$cytokine <- str_replace_all(data$cytokine,"TNFb", "LTA")
data$cytokine <- str_replace_all(data$cytokine,"IFN_la1", "IFNL1")
data$cytokine <- str_replace_all(data$cytokine,"GM_CSF", "CSF2")
data$cytokine <- str_replace_all(data$cytokine,"IL8", "CXCL8")
#to check again the availability of the cyokines in scRNA seq
unique(dat$gene)
intercept <- unique(intersect(unique(dat$gene), unique(data$cytokine)))
#upload ramilowski LR database
ramilwoski <- read.csv(file = paste0(dir, "input data/ramilowski_LR.csv")
#upload ramilowski LR database
ramilwoski <- read.csv(file = paste0(dir, "input data/ramilowski_LR.csv"))
ramilowski_sub <- ramilwoski[which(ramilwoski$ligand %in% all_cytokines),]
ramilowski_sub <-unique(ramilowski_sub)
all_cytokines <- c("CCL5","CXCL9","CXCL10")
#upload ramilowski LR database
ramilwoski <- read.csv(file = paste0(dir, "input data/ramilowski_LR.csv"))
ramilowski_sub <- ramilwoski[which(ramilwoski$ligand %in% all_cytokines),]
ramilowski_sub <-unique(ramilowski_sub)
